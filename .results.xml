<?xml version="1.0" encoding="utf-8"?><testsuite errors="0" failures="2" name="pytest" skips="0" tests="5" time="0.636"><testcase classname="pytests.test_index" file="pytests/test_index.py" line="10" name="test_sentence" time="0.0012564659118652344"></testcase><testcase classname="pytests.test_index" file="pytests/test_index.py" line="15" name="test_flatiron_mantra" time="0.00494694709777832"><failure message="AssertionError: 
assert &apos;learn. love. code.&apos; == &apos;Learn. Love. Code.&apos;
  - learn. love. code.
  ? ^      ^     ^
  + Learn. Love. Code.
  ? ^      ^     ^">def test_flatiron_mantra():
        assert flatiron_mantra is not None, &quot;The flatiron_mantra variable must be assigned to a value!&quot;
        assert type(flatiron_mantra) == type(&quot;&quot;), &quot;The flatiron_mantra must be a string!&quot;
&gt;       assert flatiron_mantra == &quot;Learn. Love. Code.&quot;, &quot;&quot;
E       AssertionError: 
E       assert &apos;learn. love. code.&apos; == &apos;Learn. Love. Code.&apos;
E         - learn. love. code.
E         ? ^      ^     ^
E         + Learn. Love. Code.
E         ? ^      ^     ^

pytests/test_index.py:19: AssertionError</failure></testcase><testcase classname="pytests.test_index" file="pytests/test_index.py" line="20" name="test_num_to_string" time="0.0017445087432861328"><failure message="AssertionError: The num_to_string must be a string!
assert &lt;class &apos;int&apos;&gt; == &lt;class &apos;str&apos;&gt;
 +  where &lt;class &apos;int&apos;&gt; = type(1234)
 +  and   &lt;class &apos;str&apos;&gt; = type(&apos;&apos;)">def test_num_to_string():
        assert num_to_string is not None, &quot;The num_to_string variable must be assigned to a value!&quot;
&gt;       assert type(num_to_string) == type(&quot;&quot;), &quot;The num_to_string must be a string!&quot;
E       AssertionError: The num_to_string must be a string!
E       assert &lt;class &apos;int&apos;&gt; == &lt;class &apos;str&apos;&gt;
E        +  where &lt;class &apos;int&apos;&gt; = type(1234)
E        +  and   &lt;class &apos;str&apos;&gt; = type(&apos;&apos;)

pytests/test_index.py:23: AssertionError</failure></testcase><testcase classname="pytests.test_index" file="pytests/test_index.py" line="25" name="test_full_address" time="0.0010762214660644531"></testcase><testcase classname="pytests.test_index" file="pytests/test_index.py" line="31" name="test_conda_environment_activated" time="0.0019118785858154297"></testcase></testsuite>